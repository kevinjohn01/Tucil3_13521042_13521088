{"ast":null,"code":"var _jsxFileName = \"/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/GraphProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getEdgeColor(edges, newRouteEdge) {\n  return newRouteEdge[edges.from] && newRouteEdge[edges.from].includes(edges.to) ? \"#000000\" : \"#FF0000\";\n}\nfunction GraphProcessor(_ref) {\n  _s();\n  let {\n    weight,\n    nodenames,\n    path\n  } = _ref;\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const visJsRef = useRef(null);\n  useEffect(() => {\n    if (weight && nodenames) {\n      const newNodes = [];\n      const newEdges = [];\n      let id = 0;\n      for (let i = 0; i < weight.length; i++) {\n        newNodes.push({\n          id: `${i}`,\n          label: nodenames[i][0]\n        });\n        for (let j = 0; j < weight[i].length; j++) {\n          if (weight[i][j] !== 0) newEdges.push({\n            id: `${id}`,\n            from: i,\n            to: j\n          });\n          id++;\n        }\n      }\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [weight, nodenames]);\n  useEffect(() => {\n    let newRouteEdge = [];\n    if (path != null) {\n      for (let i = 0; i < path.length - 1; i++) {\n        if (newRouteEdge[path[i]] === undefined) {\n          newRouteEdge[path[i]] = [path[i + 1]];\n        } else {\n          newRouteEdge[path[i]].push(path[i + 1]);\n        }\n      }\n    }\n    const visJsRefCurrent = visJsRef.current;\n    const network = new Network(visJsRefCurrent, {\n      nodes,\n      edges\n    }, {\n      autoResize: true,\n      edges: {\n        color: {\n          color: \"black\",\n          highlight: \"black\"\n        }\n      }\n    });\n    console.log(network);\n    network.body.data.edges.update({\n      id: edgeId,\n      color: {\n        color: \"red\"\n      }\n    });\n    return () => {\n      network.destroy();\n    };\n  }, [nodes, edges, path]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: visJsRef,\n    className: \"graph\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }, this);\n}\n_s(GraphProcessor, \"Wst6RXIqRek9kqLwMYJBAV8VmNo=\");\n_c = GraphProcessor;\nexport default GraphProcessor;\nvar _c;\n$RefreshReg$(_c, \"GraphProcessor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Network","jsxDEV","_jsxDEV","getEdgeColor","edges","newRouteEdge","from","includes","to","GraphProcessor","_ref","_s","weight","nodenames","path","nodes","setNodes","setEdges","visJsRef","newNodes","newEdges","id","i","length","push","label","j","undefined","visJsRefCurrent","current","network","autoResize","color","highlight","console","log","body","data","update","edgeId","destroy","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/GraphProcessor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport \"./App.css\";\n\nfunction getEdgeColor(edges, newRouteEdge) {\n  return newRouteEdge[edges.from] && newRouteEdge[edges.from].includes(edges.to) ? \"#000000\" : \"#FF0000\";\n}\n\nfunction GraphProcessor({ weight, nodenames, path }) {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const visJsRef = useRef(null);\n\n  useEffect(() => {\n    if (weight && nodenames) {\n      const newNodes = [];\n      const newEdges = [];\n      let id = 0;\n      for (let i = 0; i < weight.length; i++) {\n        newNodes.push({ id: `${i}`, label: nodenames[i][0] });\n        for (let j = 0; j < weight[i].length; j++) {\n          if (weight[i][j] !== 0) newEdges.push({ id: `${id}`, from: i, to: j });\n          id++;\n        }\n      }\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [weight, nodenames]);\n\n  useEffect(() => {\n    let newRouteEdge = [];\n    if (path != null) {\n      for (let i = 0; i < path.length - 1; i++) {\n        if (newRouteEdge[path[i]] === undefined) {\n          newRouteEdge[path[i]] = [path[i + 1]];\n        } else {\n          newRouteEdge[path[i]].push(path[i + 1])\n        }\n      }\n    }\n    const visJsRefCurrent = visJsRef.current;\n    const network = new Network(\n      visJsRefCurrent,\n      { nodes, edges },\n      {\n        autoResize: true,\n        edges: {\n          color: {\n            color: \"black\",\n            highlight: \"black\"\n          }\n        }\n      }\n    );\n    console.log(network);\n    network.body.data.edges.update({id: edgeId, color: {color: \"red\"}});\n    return () => {\n      network.destroy();\n    };\n  }, [nodes, edges, path]);\n\n  return (<div ref={visJsRef} className=\"graph\" />);\n}\n\nexport default GraphProcessor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
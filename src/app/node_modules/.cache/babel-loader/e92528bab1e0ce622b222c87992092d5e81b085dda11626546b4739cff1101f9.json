{"ast":null,"code":"var _jsxFileName = \"/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/MapContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker, DirectionsRenderer } from 'google-maps-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContainer(props) {\n  _s();\n  const [selectedPlaces, setSelectedPlaces] = useState([]);\n  const handleMapClick = (mapProps, map, event) => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setSelectedPlaces(prevState => [...prevState, {\n      lat,\n      lng\n    }]);\n  };\n  const handleMarkerClick = place => {\n    const updatedPlaces = selectedPlaces.filter(p => p !== place);\n    setSelectedPlaces(updatedPlaces);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos_display\",\n      children: selectedPlaces.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Marker \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Latitude: \", place.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Longitude: \", place.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMarkerClick(place),\n          children: \"Delete Marker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      google: props.google,\n      zoom: 18,\n      initialCenter: {\n        lat: -6.890585,\n        lng: 107.609806\n      },\n      onClick: handleMapClick,\n      children: selectedPlaces.map((place, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: place,\n        onClick: () => handleMarkerClick(place)\n      }, `${place.lat}_${place.lng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContainer, \"mgANxquNPOie0Vx9f7DT1xH6P3k=\");\n_c = MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyARU5nFMn3Y4-3ccy1lTnH6F4i926-jk2E'\n})(MapContainer);\n// import React, { useState, useEffect } from 'react';\n// import { Map, GoogleApiWrapper, Marker, DirectionsRenderer } from 'google-maps-react';\n\n// function MapContainer(props) {\n//   const [selectedPlaces, setSelectedPlaces] = useState([]);\n\n//   const handleMapClick = (mapProps, map, event) => {\n//     const lat = event.latLng.lat();\n//     const lng = event.latLng.lng();\n//     setSelectedPlaces(prevState => [...prevState, { lat, lng }]);\n//   };\n\n//   const handleMarkerClick = (place) => {\n//     const updatedPlaces = selectedPlaces.filter((p) => p !== place);\n//     setSelectedPlaces(updatedPlaces);\n//   };\n\n//   useEffect(() => {\n//     if (selectedPlaces.length < 2) {\n//       return;\n//     }\n\n//     const waypoints = selectedPlaces.map(place => ({\n//       location: new props.google.maps.LatLng(place.lat, place.lng)\n//     }));\n\n//     const origin = waypoints.shift().location;\n//     const destination = waypoints.pop().location;\n\n//     const directionsService = new props.google.maps.DirectionsService();\n//     const travelMode = props.google.maps.TravelMode.DRIVING;\n\n//     directionsService.route({\n//       origin,\n//       destination,\n//       waypoints,\n//       travelMode\n//     }, (response, status) => {\n//       if (status === 'OK') {\n//         const directionsRenderer = new props.google.maps.DirectionsRenderer();\n//         directionsRenderer.setDirections(response);\n//         setSelectedPlaces([]);\n//         setDirections(directionsRenderer);\n//       }\n//     });\n//   }, [selectedPlaces]);\n\n//   const [directions, setDirections] = useState(null);\n\n//   return (\n//     <div className=\"map_container\">\n//       <div className=\"pos_display\">\n//         {selectedPlaces.map((place, index) => (\n//           <div key={index}>\n//             <p>Marker {index+1}</p>\n//             <p>Latitude: {place.lat}</p>\n//             <p>Longitude: {place.lng}</p>\n//             <button onClick={() => handleMarkerClick(place)}>Delete Marker</button>\n//           </div>\n//         ))}\n//       </div>\n//       <Map\n//         google={props.google}\n//         zoom={18}\n//         initialCenter={{ lat: -6.890585, lng: 107.609806 }}\n//         onClick={handleMapClick}\n//       >\n//         {selectedPlaces.map((place, index) => (\n//           <Marker key={`${place.lat}_${place.lng}`} position={place} onClick={() => handleMarkerClick(place)} />\n//         ))}\n//         {directions && <DirectionsRenderer directions={directions} />}\n//       </Map>\n//     </div>\n//   );\n// }\n\n// export default GoogleApiWrapper({\n//     apiKey: 'AIzaSyARU5nFMn3Y4-3ccy1lTnH6F4i926-jk2E',\n//   })(MapContainer);\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useState","useEffect","Map","GoogleApiWrapper","Marker","DirectionsRenderer","jsxDEV","_jsxDEV","MapContainer","props","_s","selectedPlaces","setSelectedPlaces","handleMapClick","mapProps","map","event","lat","latLng","lng","prevState","handleMarkerClick","place","updatedPlaces","filter","p","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","google","zoom","initialCenter","position","_c","apiKey","$RefreshReg$"],"sources":["/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/MapContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker, DirectionsRenderer } from 'google-maps-react';\nimport './App.css';\n\nfunction MapContainer(props) {\n  const [selectedPlaces, setSelectedPlaces] = useState([]);\n\n  const handleMapClick = (mapProps, map, event) => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setSelectedPlaces(prevState => [...prevState, { lat, lng }]);\n  };\n  const handleMarkerClick = (place) => {\n    const updatedPlaces = selectedPlaces.filter((p) => p !== place);\n    setSelectedPlaces(updatedPlaces);\n  };\n  return (\n    <div className=\"map_container\">\n      <div className=\"pos_display\">\n        {selectedPlaces.map((place, index) => (\n          <div key={index}>\n            <p>Marker {index+1}</p>\n            <p>Latitude: {place.lat}</p>\n            <p>Longitude: {place.lng}</p>\n            <button onClick={() => handleMarkerClick(place)}>Delete Marker</button>\n          </div>\n        ))}\n      </div>\n      <Map\n        google={props.google}\n        zoom={18}\n        initialCenter={{ lat: -6.890585, lng: 107.609806 }}\n        onClick={handleMapClick}\n      >\n        {selectedPlaces.map((place, index) => (\n          <Marker key={`${place.lat}_${place.lng}`} position={place} onClick={() => handleMarkerClick(place)} />\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyARU5nFMn3Y4-3ccy1lTnH6F4i926-jk2E',\n})(MapContainer);\n// import React, { useState, useEffect } from 'react';\n// import { Map, GoogleApiWrapper, Marker, DirectionsRenderer } from 'google-maps-react';\n\n// function MapContainer(props) {\n//   const [selectedPlaces, setSelectedPlaces] = useState([]);\n\n//   const handleMapClick = (mapProps, map, event) => {\n//     const lat = event.latLng.lat();\n//     const lng = event.latLng.lng();\n//     setSelectedPlaces(prevState => [...prevState, { lat, lng }]);\n//   };\n\n//   const handleMarkerClick = (place) => {\n//     const updatedPlaces = selectedPlaces.filter((p) => p !== place);\n//     setSelectedPlaces(updatedPlaces);\n//   };\n\n//   useEffect(() => {\n//     if (selectedPlaces.length < 2) {\n//       return;\n//     }\n\n//     const waypoints = selectedPlaces.map(place => ({\n//       location: new props.google.maps.LatLng(place.lat, place.lng)\n//     }));\n\n//     const origin = waypoints.shift().location;\n//     const destination = waypoints.pop().location;\n\n//     const directionsService = new props.google.maps.DirectionsService();\n//     const travelMode = props.google.maps.TravelMode.DRIVING;\n\n//     directionsService.route({\n//       origin,\n//       destination,\n//       waypoints,\n//       travelMode\n//     }, (response, status) => {\n//       if (status === 'OK') {\n//         const directionsRenderer = new props.google.maps.DirectionsRenderer();\n//         directionsRenderer.setDirections(response);\n//         setSelectedPlaces([]);\n//         setDirections(directionsRenderer);\n//       }\n//     });\n//   }, [selectedPlaces]);\n\n//   const [directions, setDirections] = useState(null);\n\n//   return (\n//     <div className=\"map_container\">\n//       <div className=\"pos_display\">\n//         {selectedPlaces.map((place, index) => (\n//           <div key={index}>\n//             <p>Marker {index+1}</p>\n//             <p>Latitude: {place.lat}</p>\n//             <p>Longitude: {place.lng}</p>\n//             <button onClick={() => handleMarkerClick(place)}>Delete Marker</button>\n//           </div>\n//         ))}\n//       </div>\n//       <Map\n//         google={props.google}\n//         zoom={18}\n//         initialCenter={{ lat: -6.890585, lng: 107.609806 }}\n//         onClick={handleMapClick}\n//       >\n//         {selectedPlaces.map((place, index) => (\n//           <Marker key={`${place.lat}_${place.lng}`} position={place} onClick={() => handleMarkerClick(place)} />\n//         ))}\n//         {directions && <DirectionsRenderer directions={directions} />}\n//       </Map>\n//     </div>\n//   );\n// }\n\n// export default GoogleApiWrapper({\n//     apiKey: 'AIzaSyARU5nFMn3Y4-3ccy1lTnH6F4i926-jk2E',\n//   })(MapContainer);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
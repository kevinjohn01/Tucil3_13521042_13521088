{"ast":null,"code":"var _jsxFileName = \"/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/GraphProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphProcessor(_ref) {\n  _s();\n  let {\n    weight,\n    nodenames,\n    path\n  } = _ref;\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  // console.log(weight);\n  // console.log(nodenames);\n  useEffect(() => {\n    if (weight && nodenames) {\n      // console.log(\"weight:\");\n      // console.log(weight);\n      const newNodes = [];\n      const newEdges = [];\n      console.log(weight.length);\n      for (let i = 0; i < weight.length; i++) {\n        newNodes.push({\n          id: i,\n          label: nodenames[i][0]\n        });\n        // console.log(\"newNodes\");\n        for (let j = 0; j < weight[i].length; j++) {\n          if (weight[i][j] !== 0) newEdges.push({\n            from: i,\n            to: j\n          });\n          // console.log(newEdges);\n        }\n      }\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [weight, nodenames]);\n\n  // const visJsRef = useRef(null);\n  // // console.log(nodes);\n  // // console.log(edges);\n  // useEffect(() => {\n  //     edges.from\n  //     visJsRef.current &&\n  //     new Network(\n  //       visJsRef.current,\n  //       { nodes, edges },\n  //       {\n  //         // autoResize: true,\n  //         edges: {\n  //           color: \"#00000\"\n  //         }\n  //       }\n  //     );\n  // }, [visJsRef, nodes, edges]);\n  useEffect(() => {\n    const newEdges = edges.map(edge => {\n      if (edge.from === 1 && edge.to === 2 || edge.from === 3 && edge.to === 4) {\n        // change the color of the edge\n        return {\n          ...edge,\n          color: \"red\"\n        };\n      }\n      // keep the original edge\n      return edge;\n    });\n    const network = new Network(visJsRef.current, {\n      nodes,\n      edges: newEdges\n    }, {\n      edges: {\n        color: \"#000000\",\n        width: 1\n      }\n    });\n    return () => {\n      network.destroy();\n    };\n  }, [visJsRef, nodes, edges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: visJsRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n_s(GraphProcessor, \"Mk2/Tt8LT7XybniAM/Gfz5F2XUk=\");\n_c = GraphProcessor;\nexport default GraphProcessor;\nvar _c;\n$RefreshReg$(_c, \"GraphProcessor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Network","jsxDEV","_jsxDEV","GraphProcessor","_ref","_s","weight","nodenames","path","nodes","setNodes","edges","setEdges","newNodes","newEdges","console","log","length","i","push","id","label","j","from","to","map","edge","color","network","visJsRef","current","width","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/putinabillaaidira/Downloads/KULIAH/Semester 4/STIMA/Tucil3_13521042_13521088/src/app/src/GraphProcessor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\n\nfunction GraphProcessor({weight, nodenames, path}) {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  // console.log(weight);\n  // console.log(nodenames);\n  useEffect(() => {\n    if (weight && nodenames) {\n      // console.log(\"weight:\");\n      // console.log(weight);\n      const newNodes = [];\n      const newEdges = [];\n      console.log(weight.length);\n      for(let i = 0; i < weight.length; i++){\n          newNodes.push({id: i, label: nodenames[i][0]});\n          // console.log(\"newNodes\");\n          for(let j = 0; j < weight[i].length; j++){\n              if(weight[i][j] !== 0) newEdges.push({from: i, to: j});\n              // console.log(newEdges);\n          }\n      }\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [weight, nodenames]);\n\n  // const visJsRef = useRef(null);\n  // // console.log(nodes);\n  // // console.log(edges);\n  // useEffect(() => {\n  //     edges.from\n  //     visJsRef.current &&\n  //     new Network(\n  //       visJsRef.current,\n  //       { nodes, edges },\n  //       {\n  //         // autoResize: true,\n  //         edges: {\n  //           color: \"#00000\"\n  //         }\n  //       }\n  //     );\n  // }, [visJsRef, nodes, edges]);\n  useEffect(() => {\n    const newEdges = edges.map((edge) => {\n      if ((edge.from === 1 && edge.to === 2) || (edge.from === 3 && edge.to === 4)) {\n        // change the color of the edge\n        return { ...edge, color: \"red\" };\n      }\n      // keep the original edge\n      return edge;\n    });\n    \n    const network = new Network(\n      visJsRef.current,\n      { nodes, edges: newEdges },\n      {\n        edges: {\n          color: \"#000000\",\n          width: 1\n        }\n      }\n    );\n  \n    return () => {\n      network.destroy();\n    };\n  }, [visJsRef, nodes, edges]);\n  \n  return(<div ref={visJsRef} />);\n}\n\nexport default GraphProcessor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}